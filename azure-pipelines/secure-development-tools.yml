parameters:
  EnableAPIScan:

steps:

- powershell: echo "##vso[build.addbuildtag]compliance"
  displayName: 🏷️ Tag run with 'compliance'

- task: CopyFiles@2
  displayName: 📂 Collect APIScan inputs
  inputs:
    SourceFolder: $(Build.ArtifactStagingDirectory)/Symbols-$(Agent.JobName)
    # Exclude any patterns from the Contents (e.g. `!**/git2*`) that we have symbols for but do not need to run APIScan on.
    Contents: |
      **
      !**/arm64/**
      !**/win-arm64/**
      !**/linux-*/**
      !**/osx*/**
    TargetFolder: $(Build.ArtifactStagingDirectory)/APIScanInputs

- task: APIScan@2
  displayName: 🔍 Run APIScan
  inputs:
    softwareFolder: $(Build.ArtifactStagingDirectory)/APIScanInputs
    softwareName: $(SymbolsFeatureName)
    softwareVersionNum: $(NBGV_MajorMinorVersion)
    isLargeApp: false
    toolVersion: Latest
  condition: and(succeeded(), ${{ parameters.EnableAPIScan }}, ne(variables.ApiScanClientId, ''))
  env:
    AzureServicesAuthConnectionString: runAs=App;AppId=$(ApiScanClientId);TenantId=$(ApiScanTenant);AppKey=$(ApiScanSecret)

- task: SdtReport@2
  displayName: 📃 Create Security Analysis Report
  inputs:
    GdnExportAllTools: true

- task: PublishSecurityAnalysisLogs@3
  displayName: 📢 Publish Code Analysis Logs
  inputs:
    ArtifactName: CodeAnalysisLogs
    ArtifactType: Container
    PublishProcessedResults: true
    AllTools: true
    ToolLogsNotFoundAction: Standard

- task: PostAnalysis@2
  displayName: 🏋️‍♀️ Break on compliance issues
  inputs:
    GdnBreakAllTools: true
    GdnBreakGdnToolBinSkimSeverity: Warning
    GdnBreakSuppressionFiles: $(System.DefaultWorkingDirectory)/azure-pipelines/falsepositives.gdnsuppress
    GdnBreakSuppressionSets: falsepositives
    GdnBreakOutputSuppressionFile: $(Build.ArtifactStagingDirectory)/guardian_failures_as_suppressions/
    GdnBreakOutputSuppressionSet: falsepositives
