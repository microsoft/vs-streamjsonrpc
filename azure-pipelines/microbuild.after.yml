parameters:
- name: EnableCompliance
  type: boolean
- name: EnableAPIScan
  type: boolean
- name: OptProf
  type: boolean
  default: false

steps:
- task: MicroBuildCodesignVerify@3
  displayName: üîç Verify Signed Files
  inputs:
    TargetFolders: |
      $(Build.SourcesDirectory)/bin/Packages/$(BuildConfiguration)/NuGet
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

- task: ms-vscs-artifact.build-tasks.artifactDropTask-1.artifactDropTask@0
  inputs:
    dropServiceURI: https://devdiv.artifacts.visualstudio.com
    buildNumber: $(ProfilingInputsDropName)
    sourcePath: $(Build.ArtifactStagingDirectory)\OptProf\ProfilingInputs
    toLowerCase: false
    usePat: true
  displayName: üì¢ Publish to Artifact Services - ProfilingInputs
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  continueOnError: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/InsertionOutputs
    ArtifactName: InsertionOutputs
    ArtifactType: Container
  displayName: üì¢ Publish InsertionOutputs as Azure DevOps artifacts
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: Ref12Analyze@0
  displayName: üìë Ref12 (Codex) Analyze
  inputs:
    codexoutputroot: $(Build.ArtifactStagingDirectory)\Codex
    workflowArguments: |
      /sourcesDirectory:$(Build.SourcesDirectory)
      /codexRepoUrl:$(Build.Repository.Uri)
      /repoName:$(Build.Repository.Name)
      /additionalCodexArguments:-bld
      /additionalCodexArguments:$(Build.ArtifactStagingDirectory)/build_logs
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.OS'], 'Windows_NT'))
  continueOnError: true

- ${{ if eq(parameters.EnableCompliance, 'true') }}:
  - template: secure-development-tools.yml
    parameters:
      EnableAPIScan: ${{ parameters.EnableAPIScan }}
