// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using StreamJsonRpc.Reflection;

namespace StreamJsonRpc;

/// <summary>
/// An interface implemented by proxies generated by <see cref="ProxyGeneration"/>
/// and <see cref="ProxyBase"/>.
/// </summary>
internal interface IJsonRpcClientProxyInternal : IJsonRpcClientProxy, IDisposableObservable
{
    /// <summary>
    /// Occurs when a method is invoked on the proxy but before it is sent over RPC.
    /// </summary>
    /// <remarks>
    /// The event arg is the CLR name of the method being invoked.
    /// Exceptions thrown from the handler propagate directly to the caller of the proxy and prevent the RPC request from being transmitted.
    /// </remarks>
    event EventHandler<string> CallingMethod;

    /// <summary>
    /// Occurs after a method is invoke and transmission over RPC has been queued.
    /// </summary>
    /// <remarks>
    /// The event arg is the CLR name of the method that was invoked.
    /// Exceptions thrown from the handler propagate directly to the caller of the proxy, although the RPC request was already transmitted.
    /// </remarks>
    event EventHandler<string> CalledMethod;

    /// <summary>
    /// Gets the handle of the object that is being marshaled over RPC for which this is a proxy, if applicable.
    /// </summary>
    long? MarshaledObjectHandle { get; }
}
