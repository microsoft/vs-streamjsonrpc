// <auto-generated/>

#nullable enable
#pragma warning disable CS0436 // prefer local types to imported ones

partial class JsonRpcProxyGenerationTests
{
    [global::StreamJsonRpc.Reflection.JsonRpcProxyMappingAttribute(typeof(StreamJsonRpc.Generated.JsonRpcProxyGenerationTests_ITimeTestedProxy_Proxy_2025_07_18))]
    partial interface ITimeTestedProxy
    {
    }
}

namespace StreamJsonRpc.Generated
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StreamJsonRpc.Analyzers", "2.23.115.57184")]
    internal class JsonRpcProxyGenerationTests_ITimeTestedProxy_Proxy_2025_07_18 : global::StreamJsonRpc.Reflection.ProxyBase
        , global::JsonRpcProxyGenerationTests.ITimeTestedProxy
    {

        private static readonly global::System.Collections.Generic.IReadOnlyDictionary<string, global::System.Type> WhatIsYourNameAsyncNamedArgumentDeclaredTypes1 = new global::System.Collections.Generic.Dictionary<string, global::System.Type>
        {
        };

        private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> WhatIsYourNameAsyncPositionalArgumentDeclaredTypes1 = new global::System.Collections.Generic.List<global::System.Type>
        {
        };

        private string? transformedWhatIsYourNameAsync1;

        private static readonly global::System.Collections.Generic.IReadOnlyDictionary<string, global::System.Type> HereIsMyCardAsyncNamedArgumentDeclaredTypes2 = new global::System.Collections.Generic.Dictionary<string, global::System.Type>
        {
            ["name"] = typeof(string),
        };

        private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> HereIsMyCardAsyncPositionalArgumentDeclaredTypes2 = new global::System.Collections.Generic.List<global::System.Type>
        {
            typeof(string),
        };

        private string? transformedHereIsMyCardAsync2;

        public JsonRpcProxyGenerationTests_ITimeTestedProxy_Proxy_2025_07_18(global::StreamJsonRpc.JsonRpc client, global::StreamJsonRpc.Reflection.ProxyInputs inputs)
            : base(client, inputs)
        {
            this.JsonRpc.AddLocalRpcMethod(this.Options.EventNameTransform("TestEvent"), this.OnTestEvent);
        }

        public event global::System.EventHandler<global::JsonRpcProxyGenerationTests.CustomEventArgs>? TestEvent;

        protected virtual void OnTestEvent(global::JsonRpcProxyGenerationTests.CustomEventArgs args) => this.TestEvent?.Invoke(this, args);

        global::System.Threading.Tasks.Task<string> global::JsonRpcProxyGenerationTests.ITimeTestedProxy.WhatIsYourNameAsync(global::System.Threading.CancellationToken caancellationToken)
        {
            if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);

            this.OnCallingMethod("WhatIsYourNameAsync");
            string rpcMethodName = this.transformedWhatIsYourNameAsync1 ??= this.Options.MethodNameTransform("WhatIsYourNameAsync");
            global::System.Threading.Tasks.Task<string> result = this.Options.ServerRequiresNamedArguments ?
                this.JsonRpc.InvokeWithParameterObjectAsync<string>(rpcMethodName, ConstructNamedArgs(), WhatIsYourNameAsyncNamedArgumentDeclaredTypes1, caancellationToken) :
                this.JsonRpc.InvokeWithCancellationAsync<string>(rpcMethodName, [], WhatIsYourNameAsyncPositionalArgumentDeclaredTypes1, caancellationToken);
            this.OnCalledMethod("WhatIsYourNameAsync");

            return result;

            global::System.Collections.Generic.Dictionary<string, object?> ConstructNamedArgs()
                => new()
                {
                };
        }

        global::System.Threading.Tasks.Task global::JsonRpcProxyGenerationTests.ITimeTestedProxy.HereIsMyCardAsync(string name)
        {
            if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);

            this.OnCallingMethod("HereIsMyCardAsync");
            string rpcMethodName = this.transformedHereIsMyCardAsync2 ??= this.Options.MethodNameTransform("HereIsMyCardAsync");
            global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
                this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, ConstructNamedArgs(), HereIsMyCardAsyncNamedArgumentDeclaredTypes2, default) :
                this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [name], HereIsMyCardAsyncPositionalArgumentDeclaredTypes2, default);
            this.OnCalledMethod("HereIsMyCardAsync");

            return result;

            global::System.Collections.Generic.Dictionary<string, object?> ConstructNamedArgs()
                => new()
                {
                    ["name"] = name,
                };
        }
    }
}
