// <auto-generated/>

#nullable enable
#pragma warning disable CS0436 // prefer local types to imported ones

[global::StreamJsonRpc.Reflection.JsonRpcProxyMappingAttribute(typeof(StreamJsonRpc.Generated.IFoo2_Proxy))]
partial interface IFoo2
{
}

namespace StreamJsonRpc.Generated
{
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("StreamJsonRpc.Analyzers", "x.x.x.x")]
	internal class IFoo2_Proxy : global::StreamJsonRpc.Reflection.ProxyBase
		, global::IFoo2
	{
		
		private static readonly global::System.Collections.Generic.IReadOnlyDictionary<string, global::System.Type> JustCancellationAsyncNamedArgumentDeclaredTypes1 = new global::System.Collections.Generic.Dictionary<string, global::System.Type>
		{
		};
		
		private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> JustCancellationAsyncPositionalArgumentDeclaredTypes1 = new global::System.Collections.Generic.List<global::System.Type>
		{
		};
		
		private string? transformedJustCancellationAsync1;
		
		private static readonly global::System.Collections.Generic.IReadOnlyDictionary<string, global::System.Type> JustAnotherCancellationAsyncNamedArgumentDeclaredTypes2 = new global::System.Collections.Generic.Dictionary<string, global::System.Type>
		{
		};
		
		private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> JustAnotherCancellationAsyncPositionalArgumentDeclaredTypes2 = new global::System.Collections.Generic.List<global::System.Type>
		{
		};
		
		private string? transformedJustAnotherCancellationAsync2;
		
		public IFoo2_Proxy(global::StreamJsonRpc.JsonRpc client, global::StreamJsonRpc.Reflection.ProxyInputs inputs)
		    : base(client, inputs)
		{
		}
		
		global::System.Threading.Tasks.Task global::IFoo.JustCancellationAsync(global::System.Threading.CancellationToken cancellationToken)
		{
			if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
			
			this.OnCallingMethod("JustCancellationAsync");
			string rpcMethodName = this.transformedJustCancellationAsync1 ??= this.Options.MethodNameTransform("JustCancellationAsync");
			global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
			    this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, ConstructNamedArgs(), JustCancellationAsyncNamedArgumentDeclaredTypes1, cancellationToken) :
			    this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [], JustCancellationAsyncPositionalArgumentDeclaredTypes1, cancellationToken);
			this.OnCalledMethod("JustCancellationAsync");
			
			return result;
			
			global::System.Collections.Generic.Dictionary<string, object?> ConstructNamedArgs()
			    => new()
			    {
				};
		}
		
		global::System.Threading.Tasks.Task global::IFoo2.JustAnotherCancellationAsync(global::System.Threading.CancellationToken cancellationToken)
		{
			if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
			
			this.OnCallingMethod("JustAnotherCancellationAsync");
			string rpcMethodName = this.transformedJustAnotherCancellationAsync2 ??= this.Options.MethodNameTransform("JustAnotherCancellationAsync");
			global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
			    this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, ConstructNamedArgs(), JustAnotherCancellationAsyncNamedArgumentDeclaredTypes2, cancellationToken) :
			    this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [], JustAnotherCancellationAsyncPositionalArgumentDeclaredTypes2, cancellationToken);
			this.OnCalledMethod("JustAnotherCancellationAsync");
			
			return result;
			
			global::System.Collections.Generic.Dictionary<string, object?> ConstructNamedArgs()
			    => new()
			    {
				};
		}
	}
}
