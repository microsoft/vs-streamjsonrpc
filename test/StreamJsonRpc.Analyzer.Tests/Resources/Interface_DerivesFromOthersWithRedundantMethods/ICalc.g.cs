// <auto-generated/>

#nullable enable

namespace StreamJsonRpc.Generated;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("StreamJsonRpc.Analyzers", "x.x.x.x")]
internal class ICalc_Proxy : global::StreamJsonRpc.Reflection.ProxyBase
	, global::ICalc
{
	
	private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> AddAsyncPositionalArgumentDeclaredTypes1 = new global::System.Collections.Generic.List<global::System.Type>
	{
		typeof(int),
		typeof(int),
	};
	
	private string? transformedAddAsync1;
	
	private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> AddAsyncPositionalArgumentDeclaredTypes2 = new global::System.Collections.Generic.List<global::System.Type>
	{
		typeof(int),
		typeof(int),
	};
	
	private string? transformedAddAsync2;
	
	public ICalc_Proxy(global::StreamJsonRpc.JsonRpc client, global::StreamJsonRpc.JsonRpcProxyOptions? options, long? marshaledObjectHandle, global::System.Action? onDispose)
	    : base(client, options, marshaledObjectHandle, onDispose)
	{
	}
	
	global::System.Threading.Tasks.Task<int> global::ICalc1.AddAsync(int a, int b)
	{
		if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
		
		this.OnCallingMethod("AddAsync");
		string rpcMethodName = this.transformedAddAsync1 ??= this.Options.MethodNameTransform("AddAsync");
		global::System.Threading.Tasks.Task<int> result = this.Options.ServerRequiresNamedArguments ?
		    this.JsonRpc.InvokeWithParameterObjectAsync<int>(rpcMethodName, new AddAsyncNamedArgs1(a, b), null, default) :
		    this.JsonRpc.InvokeWithCancellationAsync<int>(rpcMethodName, [a, b], AddAsyncPositionalArgumentDeclaredTypes1, default);
		this.OnCalledMethod("AddAsync");
		
		return result;
	}
	
	global::System.Threading.Tasks.Task<int> global::ICalc2.AddAsync(int a, int b)
	{
		if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
		
		this.OnCallingMethod("AddAsync");
		string rpcMethodName = this.transformedAddAsync2 ??= this.Options.MethodNameTransform("AddAsync");
		global::System.Threading.Tasks.Task<int> result = this.Options.ServerRequiresNamedArguments ?
		    this.JsonRpc.InvokeWithParameterObjectAsync<int>(rpcMethodName, new AddAsyncNamedArgs2(a, b), null, default) :
		    this.JsonRpc.InvokeWithCancellationAsync<int>(rpcMethodName, [a, b], AddAsyncPositionalArgumentDeclaredTypes2, default);
		this.OnCalledMethod("AddAsync");
		
		return result;
	}
	
	private readonly struct AddAsyncNamedArgs1
	{
	    public AddAsyncNamedArgs1(int a, int b)
	    {
			this.a = a;
			this.b = b;
		}
		
		public readonly int a;
		
		public readonly int b;
	}
	
	private readonly struct AddAsyncNamedArgs2
	{
	    public AddAsyncNamedArgs2(int a, int b)
	    {
			this.a = a;
			this.b = b;
		}
		
		public readonly int a;
		
		public readonly int b;
	}
}
