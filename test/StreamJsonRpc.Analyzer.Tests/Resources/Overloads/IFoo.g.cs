// <auto-generated/>

#nullable enable

namespace StreamJsonRpc.Generated;

[global::System.CodeDom.Compiler.GeneratedCodeAttribute("StreamJsonRpc.Analyzers", "x.x.x.x")]
internal class IFoo_Proxy : global::StreamJsonRpc.Reflection.ProxyBase
	, global::IFoo
{
	
	private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> SayHiPositionalArgumentDeclaredTypes1 = new global::System.Collections.Generic.List<global::System.Type>
	{
	};
	
	private string? transformedSayHi1;
	
	private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> SayHiPositionalArgumentDeclaredTypes2 = new global::System.Collections.Generic.List<global::System.Type>
	{
		typeof(string),
	};
	
	private string? transformedSayHi2;
	
	private static readonly global::System.Collections.Generic.IReadOnlyList<global::System.Type> SayHiPositionalArgumentDeclaredTypes3 = new global::System.Collections.Generic.List<global::System.Type>
	{
		typeof(string),
		typeof(int),
	};
	
	private string? transformedSayHi3;
	
	public IFoo_Proxy(global::StreamJsonRpc.JsonRpc client, global::StreamJsonRpc.JsonRpcProxyOptions? options, long? marshaledObjectHandle, global::System.Action? onDispose)
	    : base(client, options, marshaledObjectHandle, onDispose)
	{
	}
	
	global::System.Threading.Tasks.Task global::IFoo.SayHi()
	{
		if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
		
		this.OnCallingMethod("SayHi");
		string rpcMethodName = this.transformedSayHi1 ??= this.Options.MethodNameTransform("SayHi");
		global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
		    this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, new SayHiNamedArgs1(), null, default) :
		    this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [], SayHiPositionalArgumentDeclaredTypes1, default);
		this.OnCalledMethod("SayHi");
		
		return result;
	}
	
	global::System.Threading.Tasks.Task global::IFoo.SayHi(string name)
	{
		if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
		
		this.OnCallingMethod("SayHi");
		string rpcMethodName = this.transformedSayHi2 ??= this.Options.MethodNameTransform("SayHi");
		global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
		    this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, new SayHiNamedArgs2(name), null, default) :
		    this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [name], SayHiPositionalArgumentDeclaredTypes2, default);
		this.OnCalledMethod("SayHi");
		
		return result;
	}
	
	global::System.Threading.Tasks.Task global::IFoo.SayHi(string name, int age)
	{
		if (this.IsDisposed) throw new global::System.ObjectDisposedException(this.GetType().FullName);
		
		this.OnCallingMethod("SayHi");
		string rpcMethodName = this.transformedSayHi3 ??= this.Options.MethodNameTransform("SayHi");
		global::System.Threading.Tasks.Task result = this.Options.ServerRequiresNamedArguments ?
		    this.JsonRpc.InvokeWithParameterObjectAsync(rpcMethodName, new SayHiNamedArgs3(name, age), null, default) :
		    this.JsonRpc.InvokeWithCancellationAsync(rpcMethodName, [name, age], SayHiPositionalArgumentDeclaredTypes3, default);
		this.OnCalledMethod("SayHi");
		
		return result;
	}
	
	private readonly struct SayHiNamedArgs1
	{
	    public SayHiNamedArgs1()
	    {
		}
	}
	
	private readonly struct SayHiNamedArgs2
	{
	    public SayHiNamedArgs2(string name)
	    {
			this.name = name;
		}
		
		public readonly string name;
	}
	
	private readonly struct SayHiNamedArgs3
	{
	    public SayHiNamedArgs3(string name, int age)
	    {
			this.name = name;
			this.age = age;
		}
		
		public readonly string name;
		
		public readonly int age;
	}
}
